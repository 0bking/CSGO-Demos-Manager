<UserControl x:Class="Manager.Views.Demos.DemoMovieView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:properties="clr-namespace:Manager.Properties"
			 xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
			 xmlns:converters="clr-namespace:Manager.Converters"
			 xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:command="http://www.galasoft.ch/mvvmlight"
			 xmlns:mouse="clr-namespace:Manager.Internals.Mouse"
			 mc:Ignorable="d" 
			 d:DesignHeight="720"
			 d:DesignWidth="1280"
			 DataContext="{Binding DemoMovie, Source={StaticResource Locator}}">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/CSGODemosManager;component/resources/timelines/DemoMovie.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<converters:BooleanInvertedConverter x:Key="BooleanInvertedConverter" />
			<converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<converters:BooleanToVisibilityInvertedConverter x:Key="BooleanToVisibilityInvertedConverter" />
		</ResourceDictionary>
	</UserControl.Resources>

	<UserControl.InputBindings>
		<KeyBinding Command="{Binding BackToDemoDetails}"
					Gesture="CTRL+B" />
		<KeyBinding Command="{Binding GenerateMovie}"
					Gesture="CTRL+G" />
		<KeyBinding Command="{Binding ToggleDemoCommentVisibility}"
					Gesture="CTRL+T" />
		<mouse:MouseBindingExtended Gesture="XButton1"
									Command="{Binding BackToDemoDetails}"/>
	</UserControl.InputBindings>

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<command:EventToCommand Command="{Binding WindowLoaded, Mode=OneWay}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Grid>
		<Grid.RowDefinitions>
			<!-- ActionBar-->
			<RowDefinition Height="Auto" />
			<!-- Notification-->
			<RowDefinition Height="Auto"/>
			<!-- Options-->
			<RowDefinition Height="Auto"/>
			<!-- Incompatibility message -->
			<RowDefinition Height="Auto"/>
			<!-- Demo not analyzed message -->
			<RowDefinition Height="Auto"/>
			<!-- Timeline-->
			<RowDefinition Height="*" MinHeight="450" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0" Height="40">
			<StackPanel Orientation="Horizontal">
				<Button Style="{DynamicResource GeneralButton}"
						Command="{Binding BackToDemoDetails}"
						ToolTip="{x:Static properties:Resources.ToolTipBack}">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_arrow_left}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="{x:Static properties:Resources.Back}"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>

				<Button Style="{DynamicResource GeneralButton}"
						Command="{Binding GenerateMovie}"
						ToolTip="Start movie generation">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_movie_clapper_select}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="Generate"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>
				<CheckBox Content="Generate video file"
						  IsChecked="{Binding GenerateVideoFile}"
						  Style="{StaticResource CheckBoxColumnOptionStyle}" />
				<controls:ToggleSwitch OnLabel="VirtualDub"
									   OffLabel="FFmpeg"
									   VerticalAlignment="Center"
									   ToolTip="Switch between VirtualDub / FFmpeg"
									   IsChecked="{Binding UseVirtualDub}"
									   Visibility="{Binding GenerateVideoFile, Converter={StaticResource BooleanToVisibilityConverter}}"
									   IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}" />
				<Button Style="{DynamicResource GeneralButton}"
						Command="{Binding Cancel}"
						Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"
						ToolTip="Cancel">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_control_stop}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="Cancel"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>

				<StackPanel Orientation="Horizontal"
							VerticalAlignment="Center"
							Visibility="{Binding IsCorruptedDemo, Converter={StaticResource BooleanToVisibilityInvertedConverter}}">
					<Label Content="RAW files required space:"
						   Foreground="{StaticResource OrangeBrush}"/>
					<TextBlock Text="{Binding RequiredSpace, Mode=OneWay, StringFormat=' ~\{0} '}"
							   Style="{StaticResource TextBlockSmallDanger}" />
					<TextBlock Text="GB"
							   Style="{StaticResource TextBlockSmallDanger}" />
				</StackPanel>

				<TextBlock Text="Required space calculation is not available with corrupted demos."
						   VerticalAlignment="Center"
						   Visibility="{Binding IsCorruptedDemo, Converter={StaticResource BooleanToVisibilityConverter}}"
						   Style="{StaticResource TextBlockSmallDanger}" />
			</StackPanel>
		</Grid>

		<Grid Grid.Row="1"
			  Visibility="{Binding HasNotification, Converter={StaticResource BooleanToVisibilityConverter}}">
			<StackPanel Orientation="Horizontal"
						HorizontalAlignment="Center"
						Margin="5">
				<controls:ProgressRing Foreground="{DynamicResource BlackColorBrush}"
									   Width="40"
									   Height="40" />
				<TextBlock Text="{Binding Notification}"
						   Style="{StaticResource NotificationMessageStyle}" />
			</StackPanel>
		</Grid>

		<Grid Grid.Row="2" Margin="10">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid Grid.Column="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<Border Grid.Row="0"
						BorderBrush="{StaticResource LightWhiteBrush}"
						BorderThickness="1"
						Margin="0 0 0 5">
					<StackPanel Orientation="Vertical"
								Margin="5 0 5 0">
						<Border BorderBrush="{StaticResource LightWhiteBrush}"
								BorderThickness="0 0 0 1">
							<DockPanel VerticalAlignment="Center">
								<TextBlock Text="HLAE"
										   Style="{StaticResource SmallTitleStyle}" />
								<TextBlock Style="{StaticResource LinkTitleStyle}">
									<Hyperlink Command="{Binding HandleHyperLinkCommand}"
											   Style="{StaticResource HyperLinkStyle}"
											   CommandParameter="https://github.com/ripieces/advancedfx/wiki/Half-Life-Advanced-Effects">
										Official website
									</Hyperlink>
								</TextBlock>
								<StackPanel Orientation="Horizontal"
											HorizontalAlignment="Right">
									<Label Content="Installed version:"
										   VerticalAlignment="Center" />
									<TextBlock Style="{StaticResource TextBlockSmallWarning}"
											   Text="{Binding HLAEVersion, Mode=OneWay, StringFormat={} {0}}" />
									<Button Content="Install"
											ToolTip="Install HLAE"
											Style="{DynamicResource GeneralButton}"
											IsEnabled="{Binding IsHLAEInstalled, Converter={StaticResource BooleanInvertedConverter}}"
											Command="{Binding InstallHLAE}"/>
									<Button Content="Browse"
											ToolTip="Open HLAE installation folder in Window Explorer"
											Style="{DynamicResource GeneralButton}"
											IsEnabled="{Binding IsHLAEInstalled}"
											Command="{Binding NavigateToHLAEFolder}"/>
									<Button Content="Update"
											ToolTip="Update HLAE"
											Style="{DynamicResource GeneralButton}"
											IsEnabled="{Binding IsHLAEInstalled}"
											Command="{Binding UpdateHLAE}"/>
								</StackPanel>
							</DockPanel>
						</Border>

						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Label Grid.Column="0"
									   Content="{x:Static properties:Resources.CsgoExePath}"
									   VerticalAlignment="Center"/>
								<TextBox Grid.Column="1"
										 Text="{Binding CsgoExePath}"
										 Style="{StaticResource MovieTextBox}"
										 IsReadOnly="True" />
								<Button Grid.Column="2"
										Content="Change"
										ToolTip="Change csgo.exe location"
										Style="{DynamicResource GeneralButton}"
										Command="{Binding SelectCsgoExePathLocation}"/>
							</Grid>

							<StackPanel Grid.Row="1"
										Orientation="Vertical">
								<CheckBox Content="{x:Static properties:Resources.EnableMovieMakingConfigParentFolder}"
										  IsChecked="{Binding EnableHlaeConfigParentFolder}"
										  Style="{StaticResource CheckBoxColumnOptionStyle}" />
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<TextBox Grid.Column="0"
											 Text="{Binding HlaeConfigParentFolderPath}"
											 Style="{StaticResource MovieTextBox}"
											 IsReadOnly="True" />
									<Button Grid.Column="1"
											Content="Select folder"
											ToolTip="Change HLAE config parent folder location"
											Style="{DynamicResource GeneralButton}"
											IsEnabled="{Binding EnableHlaeConfigParentFolder}"
											Command="{Binding SelectHlaeConfigParentPath}"/>
								</Grid>
							</StackPanel>
						</Grid>
					</StackPanel>
				</Border>

				<Border Grid.Row="1"
						BorderBrush="{StaticResource LightWhiteBrush}"
						BorderThickness="1"
						Margin="0 0 0 5"
						Visibility="{Binding GenerateVideoFile, Converter={StaticResource BooleanToVisibilityConverter}}">
					<Grid>
						<StackPanel Orientation="Vertical"
								Visibility="{Binding UseVirtualDub, Converter={StaticResource BooleanToVisibilityInvertedConverter}}"
								Margin="5 0 5 0">
							<Border BorderBrush="{StaticResource LightWhiteBrush}"
								BorderThickness="0 0 0 1">
								<DockPanel VerticalAlignment="Center">
									<TextBlock Text="FFmpeg"
										   Style="{StaticResource SmallTitleStyle}" />
									<TextBlock Style="{StaticResource LinkTitleStyle}">
									<Hyperlink Style="{StaticResource HyperLinkStyle}"
											   Command="{Binding HandleHyperLinkCommand}"
											   CommandParameter="https://www.ffmpeg.org/">
										Official website
									</Hyperlink>
									</TextBlock>

									<StackPanel Orientation="Horizontal"
											HorizontalAlignment="Right">
										<Label Content="Installed version:"
										   VerticalAlignment="Center" />
										<TextBlock Style="{StaticResource TextBlockSmallWarning}"
											   Text="{Binding FFmpegVersion, Mode=OneWay, StringFormat={} {0}}" />
										<Button Content="Install"
												ToolTip="Install FFmpeg"
											Style="{DynamicResource GeneralButton}"
											IsEnabled="{Binding IsInstallFFmpegAvailable}"
											Command="{Binding InstallFFmpeg}"/>
										<Button Content="Browse"
												ToolTip="Open FFmpeg installation folder in Windows Explorer"
											Style="{DynamicResource GeneralButton}"
											IsEnabled="{Binding IsFFmpegInstalled}"
											Command="{Binding NavigateToFFmpegFolder}"/>
									</StackPanel>
								</DockPanel>
							</Border>

							<StackPanel Orientation="Vertical">
								<Grid Margin="0 5 0 0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<Label Grid.Column="0" Content="Video quality:"/>
									<controls:NumericUpDown Grid.Column="1"
														Minimum="0"
														Maximum="51"
														Interval="1"
														MinWidth="70"
														InterceptMouseWheel="True"
														HasDecimals="False"
														IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
														Value="{Binding VideoQuality}"/>
									<Label Grid.Column="2"
									   Content="Video framerate:" />
									<controls:NumericUpDown Grid.Column="3"
														Minimum="30"
														MinWidth="80"
														Interval="10"
														InterceptMouseWheel="True"
														HasDecimals="False"
														IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
														Value="{Binding VideoFrameRate}"/>
									<Label Grid.Column="4" Content="Audio bitrate:"/>
									<ComboBox Grid.Column="5"
										  ItemsSource="{Binding AudioBitrateValues}"
										  SelectedItem="{Binding AudioBitrate}" />
								</Grid>

								<Grid Margin="0 5 0 5">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Label Grid.Column="0"
									   Content="Extra input parameters:" />
									<TextBox Grid.Column="1"
										 Style="{StaticResource MovieTextBox}"
										 Text="{Binding FFmpegInputParameters}"
										 IsEnabled="{Binding GenerateVideoFile, Mode=OneWay}" />
									<Label Grid.Column="2"
									   Content="Extra parameters:" />
									<TextBox Grid.Column="3"
										 Style="{StaticResource MovieTextBox}"
										 Text="{Binding FFmpegExtraParameters}"
										 IsEnabled="{Binding GenerateVideoFile, Mode=OneWay}" />
								</Grid>
								<StackPanel Orientation="Vertical">
									<Label Content="Command-line input:" />
									<TextBox Text="{Binding FFmpegCommand, Mode=OneWay}"
										 TextWrapping="Wrap"
										 IsEnabled="{Binding GenerateVideoFile, Mode=OneWay}"
										 IsReadOnly="True" />
								</StackPanel>
							</StackPanel>
						</StackPanel>

						<StackPanel Orientation="Vertical"
									Visibility="{Binding UseVirtualDub, Converter={StaticResource BooleanToVisibilityConverter}}"
									Margin="5 0 5 0">
							<DockPanel VerticalAlignment="Center">
								<TextBlock Text="VirtualDub"
											   Style="{StaticResource SmallTitleStyle}" />
								<TextBlock Style="{StaticResource LinkTitleStyle}">
										<Hyperlink Style="{StaticResource HyperLinkStyle}"
												   Command="{Binding HandleHyperLinkCommand}"
												   CommandParameter="http://www.virtualdub.org/">
											Official website
										</Hyperlink>
								</TextBlock>

								<StackPanel Orientation="Horizontal"
												HorizontalAlignment="Right">
									<Label Content="Installed version:"
											   VerticalAlignment="Center" />
									<TextBlock Style="{StaticResource TextBlockSmallWarning}"
												   Text="{Binding VirtualDubVersion, Mode=OneWay, StringFormat={} {0}}" />
									<Button Content="Install"
											ToolTip="Install VirtualDub"
												Style="{DynamicResource GeneralButton}"
												IsEnabled="{Binding IsVirtualDubInstalled, Converter={StaticResource BooleanInvertedConverter}}"
												Command="{Binding InstallVirtualDub}"/>
									<Button Content="Browse"
											ToolTip="Open VirtualDub installation folder in Window Explorer"
												Style="{DynamicResource GeneralButton}"
												IsEnabled="{Binding IsVirtualDubInstalled}"
												Command="{Binding NavigateToVirtualDubFolder}"/>
								</StackPanel>
							</DockPanel>
						</StackPanel>
					</Grid>
				</Border>
			</Grid>

			<Border Grid.Column="1"
					BorderBrush="{StaticResource LightWhiteBrush}"
					Margin="5 0 0 0"
					BorderThickness="1">
				<StackPanel Orientation="Vertical"
							Margin="5 0 5 0">
					<Border BorderBrush="{StaticResource LightWhiteBrush}"
							BorderThickness="0 0 0 1">
						<StackPanel Orientation="Horizontal"
									VerticalAlignment="Center"
									Height="38">
							<TextBlock Text="General"
									   Style="{StaticResource SmallTitleStyle}" />
						</StackPanel>
					</Border>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Label Grid.Column="0"
							   Content="RAW files destination folder:"
							   VerticalAlignment="Center" />
						<TextBox Grid.Column="1"
								 Text="{Binding RawFilesFolderDestination}"
								 Style="{StaticResource MovieTextBox}"
								 IsReadOnly="True" />
						<Button Grid.Column="2" Content="Change"
								Style="{DynamicResource GeneralButton}"
								ToolTip="Change RAW files folder destination"
								Command="{Binding SelectRawFilesFolderDestination}"/>
						<Button Grid.Column="3"
								Content="{x:Static properties:Resources.Browse}"
								ToolTip="Open RAW files folder in Windows Explorer"
								Style="{DynamicResource GeneralButton}"
								Command="{Binding NavigateToRawFilesFolder}"/>
					</Grid>

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Label Grid.Column="0"
							   Content="Output folder destination:"
							   VerticalAlignment="Center" />
						<TextBox Grid.Column="1"
								 Text="{Binding OuputFileDestinationFolder}"
								 Style="{StaticResource MovieTextBox}"
								 IsReadOnly="True" />
						<Button Grid.Column="2"
								Content="Change"
								ToolTip="Change output folder destination"
								Style="{DynamicResource GeneralButton}"
								Command="{Binding SelectOutputFileDestinationFolder}"/>
						<Button Grid.Column="3"
								Content="{x:Static properties:Resources.Browse}"
								ToolTip="Open output folder in Windows Explorer"
								Style="{DynamicResource GeneralButton}"
								Command="{Binding NavigateToOutputFileFolderDestination}"/>
					</Grid>

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Label Grid.Column="0"
							   Content="Output filename" />
						<TextBox Grid.Column="1"
								 Text="{Binding OutputFileName}"
								 Style="{StaticResource MovieTextBox}"
								 MinWidth="150"
								 IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"/>
					</Grid>

					<StackPanel Orientation="Horizontal" Margin="0 5 0 5">
						<Label Content="Framerate:" />
						<controls:NumericUpDown Minimum="30"
												Interval="10"
												HasDecimals="False"
												MinWidth="80"
												IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
												Value="{Binding FrameRate}"/>
						<Label Content="Width:" />
						<controls:NumericUpDown Minimum="800"
												HideUpDownButtons="True"
												HasDecimals="False"
												MinWidth="40"
												IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
												Value="{Binding Width}"/>
						<Label Content="Height:" />
						<controls:NumericUpDown Minimum="600"
												HideUpDownButtons="True"
												HasDecimals="False"
												MinWidth="40"
												IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
												Value="{Binding Height}"/>
					</StackPanel>

					<StackPanel Orientation="Horizontal" Margin="0 0 0 5">
						<Label Content="Start tick"
							   Foreground="{StaticResource OrangeBrush}" />
						<controls:NumericUpDown Minimum="0"
												Interval="1"
												HasDecimals="False"
												MinWidth="100"
												IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
												Value="{Binding StartTick}"/>
						<Label Content="End tick"
							   Foreground="{StaticResource OrangeBrush}" />
						<controls:NumericUpDown Minimum="0"
												Interval="1"
												HasDecimals="False"
												MinWidth="100"
												IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
												Value="{Binding EndTick}"/>
						<Label Content="Duration (seconds)"
							   Visibility="{Binding IsCorruptedDemo, Converter={StaticResource BooleanToVisibilityInvertedConverter}}"
							   Foreground="{StaticResource OrangeBrush}" />
						<controls:NumericUpDown Minimum="0"
												Interval="1"
												StringFormat="N2"
												MinWidth="100"
												IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
												Visibility="{Binding IsCorruptedDemo, Converter={StaticResource BooleanToVisibilityInvertedConverter}}"
												Value="{Binding Duration}"/>
					</StackPanel>

					<StackPanel Orientation="Horizontal"
								Visibility="{Binding IsPovDemo, Converter={StaticResource BooleanToVisibilityInvertedConverter}}">
						<CheckBox Content="Focus on player:"
								  IsChecked="{Binding FocusOnPlayer}"
								  Style="{StaticResource CheckBoxColumnOptionStyle}"
								  Foreground="{StaticResource OrangeBrush}"
								  IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}" />
						<ComboBox ItemsSource="{Binding Demo.Players}"
								  IsEnabled="{Binding FocusOnPlayer}"
								  Visibility="{Binding IsIncompatibleDemo, Converter={StaticResource BooleanToVisibilityInvertedConverter}}"
								  DisplayMemberPath="Name"
								  SelectedItem="{Binding FocusedPlayer}" />
						<controls:NumericUpDown Minimum="0"
												HideUpDownButtons="True"
												HasDecimals="False"
												MinWidth="100"
												Margin="5 0 0 0"
												Value="{Binding PlayerFocusSteamID}"
												Visibility="{Binding IsIncompatibleDemo, Converter={StaticResource BooleanToVisibilityConverter}}"
												controls:TextBoxHelper.Watermark="SteamID 64"
												IsEnabled="{Binding FocusOnPlayer}" />
					</StackPanel>


					<StackPanel Orientation="Vertical">
						<CheckBox Content="Auto close the game when recording is done"
								  IsChecked="{Binding AutoCloseGame}"
								  Style="{StaticResource CheckBoxColumnOptionStyle}"
								  IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}" />
						<CheckBox Content="Delete RAW files at the end of encoding"
								  IsChecked="{Binding CleanUpRawFiles}"
								  Style="{StaticResource CheckBoxColumnOptionStyle}" />
						<CheckBox Content="Open video in Windows Explorer at the end of encoding"
								  IsChecked="{Binding OpenInExplorer}"
								  Style="{StaticResource CheckBoxColumnOptionStyle}" />
					</StackPanel>
				</StackPanel>
			</Border>

			<Border Grid.Column="2"
					Margin="5 0 0 0">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<Border Grid.Row="0"
							BorderBrush="{StaticResource LightWhiteBrush}"
							Visibility="{Binding ShowDemoComment, Converter={StaticResource BooleanToVisibilityInvertedConverter}}"
							BorderThickness="1">
						<StackPanel Orientation="Vertical"
									VerticalAlignment="Center"
									Margin="5 0 5 0">
							<Border BorderBrush="{StaticResource LightWhiteBrush}"
									BorderThickness="0 0 0 1">
								<DockPanel VerticalAlignment="Center">
									<TextBlock Text="CFG"
											   Style="{StaticResource SmallTitleStyle}" />
									<StackPanel Orientation="Horizontal"
												HorizontalAlignment="Right">
										<Button Content="Reset"
												Style="{DynamicResource GeneralButton}"
												MinWidth="70"
												ToolTip="Reset CFG to default"
												Command="{Binding ResetCfg}" />
										<Button Content="Show demo comment"
												Style="{DynamicResource GeneralButton}"
												ToolTip="Toggle demo's comment (CTRL+T)"
												Command="{Binding ToggleDemoCommentVisibility}" />
									</StackPanel>
								</DockPanel>
							</Border>

							<StackPanel Orientation="Vertical">
								<TextBlock Text="The following CFG will be automatically executed:"/>
								<TextBox Text="{Binding MandatoryCvars, Mode=OneWay}"
										 IsReadOnly="True" />
							</StackPanel>

							<StackPanel Orientation="Vertical">
								<TextBlock Text="The following CFG will be executed when the demo start playing:"/>
								<TextBox MaxHeight="200"
										 Text="{Binding Cfg}"
										 TextWrapping="Wrap"
										 AcceptsReturn="True"
										 HorizontalAlignment="Stretch"
										 VerticalAlignment="Stretch"
										 ScrollViewer.HorizontalScrollBarVisibility="Auto"
										 ScrollViewer.VerticalScrollBarVisibility="Auto"
										 ScrollViewer.CanContentScroll="True"
										 IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"/>
							</StackPanel>
						</StackPanel>
					</Border>

					<Border Grid.Row="1"
							BorderBrush="{StaticResource LightWhiteBrush}"
							Visibility="{Binding ShowDemoComment, Converter={StaticResource BooleanToVisibilityConverter}}"
							BorderThickness="1">
						<StackPanel Orientation="Vertical"
									VerticalAlignment="Center"
									Margin="5 0 5 0">
							<DockPanel VerticalAlignment="Center">
								<TextBlock Text="Demo's comment"
										   Style="{StaticResource SmallTitleStyle}" />
								<StackPanel Orientation="Horizontal"
											HorizontalAlignment="Right">
									<Button Content="Show CFG"
											Style="{DynamicResource GeneralButton}"
											Command="{Binding ToggleDemoCommentVisibility}" />
								</StackPanel>
							</DockPanel>
							<Border BorderBrush="{StaticResource LightWhiteBrush}"
									Margin="0 0 0 5">
								<TextBox Text="{Binding Demo.Comment}"
										 MaxHeight="300"
										 TextWrapping="Wrap"
										 AcceptsReturn="True">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="LostFocus">
											<command:EventToCommand Command="{Binding SaveCommentDemo}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</TextBox>
							</Border>
						</StackPanel>
					</Border>
				</Grid>
			</Border>
		</Grid>

		<TextBlock Grid.Row="3"
				   Style="{StaticResource BigTitleStyle}"
				   Foreground="{StaticResource RedColorBrush}"
				   TextWrapping="Wrap"
				   Visibility="{Binding IsIncompatibleDemo, Converter={StaticResource BooleanToVisibilityConverter}}"
				   Text="Timeline is not available with POV or corrupted demos. You have to enter ticks manually, adding a comment to the demo may be useful in this case." />

		<TextBlock Grid.Row="4"
				   Style="{StaticResource BigTitleStyle}"
				   Foreground="{StaticResource RedColorBrush}"
				   TextWrapping="Wrap"
				   Visibility="{Binding IsAnalyzeRequired, Converter={StaticResource BooleanToVisibilityConverter}}"
				   Text="You have to analyze the demo first to have timeline data." />

		<telerik:RadTimeline Grid.Row="5"
							 Visibility="{Binding IsTimelineAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
							 BorderBrush="Transparent"
							 BorderThickness="0"
							 PeriodStart="{Binding PeriodStart}"
							 PeriodEnd="{Binding PeriodEnd}"
							 VisiblePeriodStart="{Binding VisiblePeriodStart}"
							 VisiblePeriodEnd="{Binding VisiblePeriodEnd}"
							 IsSelectionEnabled="True"
							 SelectionMode="Single"
							 ScrollMode="ScrollAndZoom"
							 VerticalScrollBarVisibility="Auto"
							 StartPath="StartTime"
							 DurationPath="Duration"
							 GroupPath="Category"
							 GroupExpandMode="Multiple"
							 SliderStyle="{StaticResource TimeLineSliderStyle}"
							 ContextMenu="{StaticResource DemoMovieTimeLineContextMenu}"
							 ItemTemplateSelector="{StaticResource DemoMovieTemplateSelector}"
							 ToolTipTemplate="{StaticResource DemoToolTipTemplate}"
							 ItemsSource="{Binding TimelineEventList}">
			<telerik:RadTimeline.Intervals>
				<telerik:MinuteInterval IntervalSpans="1"
										FormatterProvider="{StaticResource DemoMovieIntervalFormatter}"  />
			</telerik:RadTimeline.Intervals>

			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MouseRightButtonDown">
					<command:EventToCommand Command="{Binding TimelineRightClick}"
												PassEventArgsToCommand="True" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</telerik:RadTimeline>
	</Grid>
</UserControl>
