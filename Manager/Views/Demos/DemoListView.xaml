<UserControl x:Class="Manager.Views.Demos.DemoListView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
			 xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
			 xmlns:converters="clr-namespace:Manager.Converters"
			 xmlns:mouse="clr-namespace:Manager.Internals.Mouse"
			 mc:Ignorable="d"
			 Name="DemoListUserControl"
			 d:DesignHeight="720"
			 d:DesignWidth="1280"
			 DataContext="{Binding DemoList, Source={StaticResource Locator}}"
			 Focusable="True">

	<UserControl.Resources>
		<ResourceDictionary>
			<converters:RowDemoDoubleClickedToDemoDetailsConverter x:Key="RowDemoDoubleClickedToDemoDetails" />
			<converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" True="Visible"/>
			<converters:BooleanInvertedConverter  x:Key="BooleanInvertedConverter" />
			<converters:ImageToSourceConverter x:Key="ImageToSourceConverter" />
			<converters:StringToDateConverter x:Key="StringToDateConverter" />
			<converters:BooleanMultipleConverter x:Key="BooleanMultipleConverter" />
			<converters:BooleanToVisibilityInvertedConverter x:Key="BooleanToVisibilityInvertedConverter" />
		</ResourceDictionary>
	</UserControl.Resources>
	<UserControl.InputBindings>
		<KeyBinding Command="{Binding BrowseToDemoCommand}"
					CommandParameter="{Binding SelectedDemo}"
					Gesture="CTRL+B" />
		<KeyBinding Command="{Binding GoToAccountStatsCommand}"
					Gesture="CTRL+E" />
		<KeyBinding Command="{Binding ShowDemoDetailsCommand}"
					CommandParameter="{Binding SelectedDemo}"
					Gesture="CTRL+D" />
		<KeyBinding Command="{Binding WatchDemoCommand}"
					CommandParameter="{Binding SelectedDemo}"
					Gesture="CTRL+W" />
		<KeyBinding Command="{Binding GoToTickCommand}"
					CommandParameter="{Binding SelectedDemo}"
					Gesture="CTRL+G" />
		<KeyBinding Command="{Binding AnalyzeDemosCommand}"
					CommandParameter="{Binding SelectedDemos}"
					Gesture="CTRL+S" />
		<KeyBinding Command="{Binding RefreshListCommand}"
					Gesture="CTRL+R" />
		<KeyBinding Command="{Binding ShowSuspectsCommand}"
					Gesture="CTRL+F" />
		<KeyBinding Command="{Binding ExportExcelCommand}"
					CommandParameter="{Binding SelectedDemos}"
					Gesture="CTRL+X" />
		<KeyBinding Command="{Binding DownloadDemosCommand}"
					Gesture="CTRL+H" />
		<KeyBinding Command="{Binding RefreshListCommand}"
					Gesture="F5" />
		<mouse:MouseBindingExtended Gesture="XButton2"
									Command="{Binding DemoList.ShowLastUserControlCommand, Source={StaticResource Locator}}"
									CommandParameter="{Binding ElementName=DemoListUserControl}"/>
	</UserControl.InputBindings>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0">

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<!-- Action bar 1st row -->
			<Grid Grid.Row="0"
				  Height="40">
				<StackPanel Orientation="Horizontal">
					<Button Command="{Binding AnalyzeDemosCommand}"
							CommandParameter="{Binding SelectedDemos}"
							ToolTip="Analyze selected demos (CTRL+S)"
							Style="{DynamicResource GeneralButton}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{DynamicResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_magnify}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Analyze"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Style="{DynamicResource GeneralButton}"
							ToolTip="Demo's details (CTRL+D)"
							Command="{Binding ShowDemoDetailsCommand}"
							CommandParameter="{Binding SelectedDemo}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_page_text}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Details"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Command="{Binding RefreshListCommand}"
							Style="{DynamicResource GeneralButton}"
							ToolTip="Refresh demos list (CTRL+R | F5)">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_refresh}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Refresh"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Command="{Binding BrowseToDemoCommand}"
							CommandParameter="{Binding SelectedDemo}"
							Style="{DynamicResource GeneralButton}"
							ToolTip="Browse to demo (CTRL+B)">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_magnify_browse}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Browse"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Command="{Binding DeleteDemosCommand}"
							CommandParameter="{Binding SelectedDemos}"
							Style="{DynamicResource GeneralButton}"
							ToolTip="Delete (CTRL+D)">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_delete}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Delete"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Command="{Binding GoToAccountStatsCommand}"
							Style="{DynamicResource GeneralButton}"
							ToolTip="Account stats (CTRL+E)">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_database}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Stats"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Command="{Binding ExportExcelCommand}"
							CommandParameter="{Binding SelectedDemos}"
							Style="{DynamicResource GeneralButton}"
							ToolTip="Export as XLS (CTRL+X)">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_office_excel}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Export"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<TextBlock Text="Account stats: "
							   Style="{StaticResource CurrentFolderStyle}"/>
					<ComboBox ItemsSource="{Binding Source={StaticResource Locator}, Path=Settings.Accounts}"
							  SelectedItem="{Binding Source={StaticResource Locator}, Path=Settings.SelectedStatsAccount}"
							  IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInvertedConverter}}"
							  DisplayMemberPath ="Name"
							  SelectedValuePath="SteamId"
							  Margin="5" />

					<CheckBox x:Name="CheckBoxShowAllAccounts"
							  Content="Show all"
							  IsChecked="{Binding Source={StaticResource Locator}, Path=Settings.IsShowAllAccounts}"
							  Margin="5"
							  Command="{Binding ShowAllAccountsCommand}"
							  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowAllAccounts}"/>

					<CheckBox x:Name="CheckBoxShowAllAccountDemos"
							  Content="Show only account demos"
							  IsChecked="{Binding Source={StaticResource Locator}, Path=Settings.IsShowOnlyAccountDemos}"
							  Margin="5"
							  Command="{Binding ShowOnlyAccountDemos}"
							  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowAllAccountDemos}"/>

					<Image Style="{StaticResource RankStyle}"
						   Source="{Binding LastRankAccountStats.Logo}"
						   Visibility="{Binding Source={StaticResource Locator}, Path=Settings.IsShowAllAccounts, Converter={StaticResource BooleanToVisibilityInvertedConverter}}"/>
					
				</StackPanel>
			</Grid>
			<!--end action bar 1st row -->

			<!-- Action bar 2nd row -->
			<Grid Grid.Row="1">
				<StackPanel Orientation="Horizontal">
					<Button Style="{DynamicResource GeneralButton}"
							ToolTip="Watch selected demo (CTRL+W)"
							Command="{Binding WatchDemoCommand}"
							CommandParameter="{Binding SelectedDemo}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_control_play}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Watch"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Style="{DynamicResource GeneralButton}"
							ToolTip="Start watching selected demo at specific tick (CTRL+G)"
							Command="{Binding GoToTickCommand}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_debug_step_into}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Goto Tick"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Style="{DynamicResource GeneralButton}"
							ToolTip="Watch your best actions."
							Command="{Binding WatchHighlightCommand}"
							CommandParameter="{Binding SelectedDemo}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_thumbs_up}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Watch highlights"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Style="{DynamicResource GeneralButton}"
							ToolTip="Watch your mistakes."
							Command="{Binding WatchLowlightCommand}"
							CommandParameter="{Binding SelectedDemo}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_thumbs_down}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Watch lowlights"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Style="{DynamicResource GeneralButton}"
							ToolTip="Add players to suspects list (CTRL+W)"
							Command="{Binding AddPlayersToSuspectsListCommand}"
							CommandParameter="{Binding SelectedDemos}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_group_add}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Add to suspects"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>

					<Button Style="{DynamicResource GeneralButton}"
							ToolTip="Go to suspects view (CTRL+F)"
							Command="{Binding ShowSuspectsCommand}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_people_profile}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Suspects "
									   Style="{StaticResource ButtonTitleStyle}" />
							<TextBlock Text="{Binding NewBannedPlayerCountAsString}" />
						</StackPanel>
					</Button>

					<Button Style="{DynamicResource GeneralButton}"
							ToolTip="Download last MM demos available for the current logged Steam account (CTRL+H)"
							Command="{Binding DownloadDemosCommand}">
						<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
							<Rectangle Width="15"
									   Height="15"
									   Fill="{StaticResource IdealForegroundColorBrush}">
								<Rectangle.OpacityMask>
									<VisualBrush Visual="{StaticResource appbar_download}"
												 Stretch="Fill" />
								</Rectangle.OpacityMask>
							</Rectangle>
							<TextBlock Text="Download MM Demos"
									   Style="{StaticResource ButtonTitleStyle}" />
						</StackPanel>
					</Button>
				</StackPanel>
			</Grid>
		</Grid>
		<!-- end action bar 2nd row -->

		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			
			<ComboBox Grid.Column="0"
					  ItemsSource="{Binding Folders, Mode=TwoWay}"
					  Style="{StaticResource ComboBoxFoldersStyle}"
					  SelectedItem="{Binding SelectedFolder}"
					  controls:TextBoxHelper.Watermark="Current folder">
				<ComboBox.IsEnabled>
					<MultiBinding Converter="{StaticResource BooleanMultipleConverter}">
						<Binding Path="IsShowAllFolders"
									 Converter="{StaticResource BooleanInvertedConverter}" />
						<Binding Path="IsBusy"
									 Converter="{StaticResource BooleanInvertedConverter}" />
					</MultiBinding>
				</ComboBox.IsEnabled>
			</ComboBox>
			<StackPanel Orientation="Horizontal"
						Grid.Column="1">
				<CheckBox x:Name="CheckBoxShowAllFolders"
						  Content="Show all folders"
						  IsChecked="{Binding IsShowAllFolders}"
						  Margin="5"
						  Command="{Binding ShowAllFoldersCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowAllFolders}"/>
				<CheckBox x:Name="CheckBoxShowPov"
						  Content="POV"
						  IsChecked="{Binding IsShowPovDemos}"
						  Margin="5"
						  Command="{Binding ShowPovDemosCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowPov}"/>
				<CheckBox x:Name="CheckBoxShowValve"
						  Content="Valve"
						  IsChecked="{Binding IsShowValveDemos}"
						  Margin="5"
						  Command="{Binding ShowValveDemosCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowValve}"/>
				<CheckBox x:Name="CheckBoxShowEbot"
						  Content="eBot"
						  IsChecked="{Binding IsShowEbotDemos}"
						  Margin="5"
						  Command="{Binding ShowEbotDemosCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowEbot}"/>
				<CheckBox x:Name="CheckBoxShowFaceit"
						  Content="Faceit"
						  IsChecked="{Binding IsShowFaceitDemos}"
						  Margin="5"
						  Command="{Binding ShowFaceitDemosCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowFaceit}"/>
				<CheckBox x:Name="CheckBoxShowEsea"
						  Content="ESEA"
						  IsChecked="{Binding IsShowEseaDemos}"
						  Margin="5"
						  Command="{Binding ShowEseaDemosCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowEsea}"/>
				<CheckBox x:Name="CheckBoxShowCevo"
						  Content="CEVO"
						  IsChecked="{Binding IsShowCevoDemos}"
						  Margin="5"
						  Command="{Binding ShowCevoDemosCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowCevo}"/>
				<CheckBox x:Name="CheckBoxShowPopFlash"
						  Content="PopFlash"
						  IsChecked="{Binding IsShowPopFlashDemos}"
						  Margin="5"
						  Command="{Binding ShowPopFlashDemosCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowPopFlash}"/>
				<CheckBox x:Name="CheckBoxShowOldDemos"
						  Content="No analyzable demos"
						  IsChecked="{Binding IsShowOldDemos}"
						  Margin="5"
						  Command="{Binding ShowOldDemosCommand}"
						  CommandParameter="{Binding IsChecked, ElementName=CheckBoxShowOldDemos}"/>
				<TextBox Text="{Binding FilterDemoText, UpdateSourceTrigger=PropertyChanged}"
						 controls:TextBoxHelper.Watermark="Filter..."
						 controls:TextBoxHelper.ClearTextButton="True"
						 Margin="5"
						 MinWidth="100"
						 VerticalAlignment="Center"
						 HorizontalAlignment="Right" />
			</StackPanel>
		</Grid>

		<Grid Grid.Row="2"
			  Visibility="{Binding HasNotification, Converter={StaticResource BooleanToVisibilityConverter}}">
			<StackPanel Orientation="Horizontal"
						HorizontalAlignment="Center"
						Margin="5">
				<controls:ProgressRing IsActive="{Binding HasRing}"
									   Foreground="{DynamicResource BlackColorBrush}"
									   Width="40"
									   Height="40" />
				<TextBlock Name="NotificationText"
						   Text="{Binding NotificationMessage}"
						   Style="{StaticResource NotificationMessageStyle}"
						   Visibility="{Binding HasNotification, Converter={StaticResource BooleanToVisibilityConverter}}"/>
				<Button Command="{Binding StopAnalyzeCommand}"
						Style="{DynamicResource GeneralButton}"
						Visibility="{Binding IsCancellable, Converter={StaticResource BooleanToVisibilityConverter}}"
						ToolTip="Stop (CTRL+S)">
					<StackPanel Style="{StaticResource GeneralButtonStackPanel}">
						<Rectangle Width="15"
								   Height="15"
								   Fill="{StaticResource IdealForegroundColorBrush}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_control_stop}"
											 Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>
						<TextBlock Text="Stop"
								   Style="{StaticResource ButtonTitleStyle}" />
					</StackPanel>
				</Button>
			</StackPanel>
		</Grid>

		<DataGrid Grid.Row="3"
				  x:Name="DataGridDemos"
				  Style="{StaticResource DataGridStyle}"
				  ItemsSource="{Binding Demos, IsAsync=True}"
				  SelectedItem="{Binding SelectedDemo}"
				  RowStyle="{StaticResource DataGridRowMainListDemosStyle}">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MouseDoubleClick">
					<mvvm:EventToCommand Command="{Binding Source={StaticResource Locator}, Path=DemoList.ShowDemoDetailsCommand}"
										 PassEventArgsToCommand="True"
										 EventArgsConverter="{StaticResource RowDemoDoubleClickedToDemoDetails}"
										 EventArgsConverterParameter="{Binding SelectedDemo}"/>
				</i:EventTrigger>
				<i:EventTrigger EventName="SelectionChanged">
					<mvvm:EventToCommand
						Command="{Binding DemosSelectionChangedCommand}"
						CommandParameter="{Binding SelectedItems, ElementName=DataGridDemos}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<DataGrid.Columns>
				<DataGridTemplateColumn Header="Source"
										Width="Auto"
										SortMemberPath="Source.Name">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Image Source="{Binding Path=Source.Logo, Converter={StaticResource ImageToSourceConverter}}"
								   Height="20"
								   Width="40"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTextColumn Width="Auto"
									Header="Date"
									Binding="{Binding DateAsString, Converter={StaticResource StringToDateConverter}}"
									HeaderStyle="{StaticResource DemoDateHeader}"
									SortDirection="Descending"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowDateColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Name"
									Binding="{Binding Name}"
									HeaderStyle="{StaticResource DemoNameHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowDemoNameColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Map"
									Binding="{Binding MapName}"
									HeaderStyle="{StaticResource MapNameHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowMapNameColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Team 1"
									Binding="{Binding TeamCT.Name}"
									HeaderStyle="{StaticResource Team1NameHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTeam1NameColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Team 2"
									Binding="{Binding TeamT.Name}"
									HeaderStyle="{StaticResource Team2NameHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTeam2NameColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTemplateColumn Header="Status"
										Width="Auto"
										HeaderStyle="{StaticResource WinStatusHeader}"
										Visibility="{Binding Source={StaticResource Locator}, Path=Settings.IsShowAllAccounts, Converter={StaticResource BooleanToVisibilityInvertedConverter}}"
										SortMemberPath="WinStatus">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Style="{StaticResource WinStatusStyle}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTextColumn Width="Auto"
									Header="ST1"
									Binding="{Binding ScoreTeam1}"
									HeaderStyle="{StaticResource ScoreTeam1Header}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowScoreTeam1Column, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="ST2"
									Binding="{Binding ScoreTeam2}"
									HeaderStyle="{StaticResource ScoreTeam2Header}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowScoreTeam2Column, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTemplateColumn Header="Ban"
										Width="Auto"
										HeaderStyle="{StaticResource BannedPlayerHeader}"
										Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowBanColumns, Converter={StaticResource BooleanToVisibilityConverter}}">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="Yes"
									   Background="{StaticResource RedColorBrush}"
									   TextAlignment="Center"
									   Visibility="{Binding HasCheater, Converter={StaticResource BooleanToVisibilityConverter}}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTextColumn Width="Auto"
									Header="Duration"
									Binding="{Binding DurationTime}"
									HeaderStyle="{StaticResource DurationHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowDurationColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Hostname"
									Binding="{Binding Hostname}"
									HeaderStyle="{StaticResource HostnameHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowHostnameColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Client"
									Binding="{Binding ClientName}"
									HeaderStyle="{StaticResource ClientnameHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowClientnameColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Type"
									Binding="{Binding Type}"
									HeaderStyle="{StaticResource DemoTypeHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowDemoTypeColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Tickrate"
									Binding="{Binding ServerTickrate}"
									HeaderStyle="{StaticResource TickrateHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTickrateColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Framerate"
									Binding="{Binding Tickrate}"
									HeaderStyle="{StaticResource FramerateHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowFramerateColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Ticks"
									Binding="{Binding Ticks}"
									HeaderStyle="{StaticResource TicksHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTicksColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Rating"
									Binding="{Binding AverageHltvRating}"
									HeaderStyle="{StaticResource RatingHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.IsShowAllAccounts, Converter={StaticResource BooleanToVisibilityInvertedConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="RWS"
									Binding="{Binding AverageEseaRws}"
									HeaderStyle="{StaticResource EseaRwsHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.IsShowAllAccounts, Converter={StaticResource BooleanToVisibilityInvertedConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="1K"
									Binding="{Binding OneKillCount}"
									HeaderStyle="{StaticResource OneKillHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowOneKillColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="2K"
									Binding="{Binding TwoKillCount}"
									HeaderStyle="{StaticResource TwoKillHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTwoKillsColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="3K"
									Binding="{Binding ThreeKillCount}"
									HeaderStyle="{StaticResource ThreeKillHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowThreeKillsColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="4K"
									Binding="{Binding FourKillCount}"
									HeaderStyle="{StaticResource FourKillHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowFourKillsColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="5K"
									Binding="{Binding FiveKillCount}"
									HeaderStyle="{StaticResource FiveKillHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowFiveKillsColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Kills"
									Binding="{Binding KillCount}"
									HeaderStyle="{StaticResource KillsHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTotalKillsColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="TK"
									Binding="{Binding TradeKillCount}"
									HeaderStyle="{StaticResource TradeKillsHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTradeKillColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="JK"
									Binding="{Binding JumpKillCount}"
									HeaderStyle="{StaticResource JumpKillsHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowJumpKillColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="CK"
									Binding="{Binding CrouchKillCount}"
									HeaderStyle="{StaticResource CrouchKillsHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowCrouchKillColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="ADR"
									Binding="{Binding AverageHealthDamage}"
									HeaderStyle="{StaticResource AverageDamagePerRoundHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowKillPerRoundColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="KPR"
									HeaderStyle="{StaticResource KillPerRoundHeader}"
									Binding="{Binding KillPerRound}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowKillPerRoundColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="DPR"
									HeaderStyle="{StaticResource DeathPerRoundHeader}"
									Binding="{Binding DeathPerRound}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowDeathPerRoundColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="APR"
									Binding="{Binding AssistPerRound}"
									HeaderStyle="{StaticResource AssistPerRoundHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowAssistPerRoundColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="TDH"
									Binding="{Binding DamageHealthCount}"
									HeaderStyle="{StaticResource TotalDamageHealthHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTotalDamageHealthColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="TDA"
									Binding="{Binding DamageArmorCount}"
									HeaderStyle="{StaticResource TotalDamageArmorHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowTotalDamageArmorColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Clutchs"
									Binding="{Binding ClutchWonCount}"
									HeaderStyle="{StaticResource ClutchWonCountHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowClutchCountColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="BD"
									Binding="{Binding BombDefusedCount}"
									HeaderStyle="{StaticResource BombDefusedHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowBombDefusedColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="BE"
									Binding="{Binding BombExplodedCount}"
									HeaderStyle="{StaticResource BombExplodedHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowBombExplodedColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="BP"
									Binding="{Binding BombPlantedCount}"
									HeaderStyle="{StaticResource BombPlantedHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowBombPlantedColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<DataGridTextColumn Width="Auto"
									Header="Comment"
									Binding="{Binding Comment}"
									HeaderStyle="{StaticResource CommentHeader}"
									Visibility="{Binding Source={StaticResource Locator}, Path=Settings.ShowCommentColumn, Converter={StaticResource BooleanToVisibilityConverter}}" />
			</DataGrid.Columns>
		</DataGrid>

		<Grid Grid.Row="4">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>

			<Button Content="Show more demos"
					Grid.Column="0"
					Margin="10 5 0 0"
					Style="{DynamicResource GeneralButton}"
					Command="{Binding ShowMoreDemosCommand}"/>
			<TextBlock Grid.Column="1"
					   Style="{StaticResource SmallTitleStyle}"
					   TextAlignment="Right"
					   Margin="10 0 5 0"
					   Text="{Binding Demos.Count, StringFormat='{}{0} demo(s)'}"/>
		</Grid>

		<Grid Grid.Row="5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<StackPanel Grid.Column="0"
						Orientation="Horizontal">
				<TextBlock Text="Comment : "
						   Style="{StaticResource CurrentFolderStyle}" />
				<TextBlock Text="{Binding SelectedDemo.Comment}"
						   Style="{StaticResource TextBlockSmall}" />
			</StackPanel>
			<StackPanel Grid.Column="1"
						Orientation="Horizontal">
				<StackPanel Orientation="Horizontal">
					<Rectangle Width="10"
							   Height="10"
							   Fill="{StaticResource GreenBrush}" />
					<TextBlock Text="To watch"
							   Style="{StaticResource CurrentFolderStyle}" />
				</StackPanel>
				<StackPanel Orientation="Horizontal"
							Margin="5 0 0 0">
					<Rectangle Width="10"
							   Height="10"
							   Fill="{StaticResource LightBlueBrush}" />
					<TextBlock Text="Watched"
							   Style="{StaticResource CurrentFolderStyle}" />
				</StackPanel>
				<StackPanel Orientation="Horizontal"
							Margin="5 0 5 0">
					<Rectangle Width="10"
							   Height="10"
							   Fill="{StaticResource RedColorBrush}" />
					<TextBlock Text="Not analyzable"
							   Style="{StaticResource CurrentFolderStyle}" />
				</StackPanel>
			</StackPanel>
		</Grid>
	</Grid>
</UserControl>
